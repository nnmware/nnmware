# Generated by Django 3.1.3 on 2020-12-03 02:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import nnmware.core.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TopicCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to=nnmware.core.abstract.upload_images_path, verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image width')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('rootnode', models.BooleanField(default=False, verbose_name='Root node')),
                ('login_required', models.BooleanField(default=False, help_text='Enable this if users must login before access with this objects.', verbose_name='Login required')),
                ('admins', models.ManyToManyField(blank=True, related_name='topic_topiccategory_adm', to=settings.AUTH_USER_MODEL, verbose_name='Category Admins')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='topic.topiccategory', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Topic Category',
                'verbose_name_plural': 'Topic Categories',
                'ordering': ['parent__id', 'name'],
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to=nnmware.core.abstract.upload_images_path, verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image width')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('karma', models.IntegerField(db_index=True, default=0, verbose_name='Karma')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Deleted'), (2, 'Locked'), (3, 'Published'), (4, 'Sticky'), (5, 'Moderation'), (6, 'Draft')], default=6, verbose_name='Status')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='topic.topiccategory', verbose_name='Category')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='topic_reg', to='address.region', verbose_name='Region')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
                'ordering': ['-created_date'],
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
    ]
