# Generated by Django 3.1.3 on 2020-12-03 02:33

from django.db import migrations, models
import django.utils.timezone
import nnmware.core.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('action_type', models.IntegerField(choices=[(0, 'Unknown'), (1, 'System'), (2, 'Added'), (3, 'Commented'), (4, 'Followed'), (5, 'Liked')], default=0, verbose_name='Action Type')),
                ('verb', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ContentBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to=nnmware.core.abstract.upload_images_path, verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image width')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Deleted'), (2, 'Locked'), (3, 'Published'), (4, 'Sticky'), (5, 'Moderation'), (6, 'Draft')], default=6, verbose_name='Status')),
                ('content_style', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Text'), (2, 'Image'), (3, 'Video'), (4, 'Code'), (5, 'Quote'), (6, 'Url'), (7, 'Raw input')], default=0, verbose_name='Content style')),
                ('description', models.TextField(blank=True, default='', verbose_name='Content')),
                ('url', models.URLField(blank=True, default='', max_length=255, verbose_name='Origin url')),
                ('author', models.CharField(blank=True, default='', max_length=255, verbose_name='Author')),
                ('teaser', models.BooleanField(default=False, verbose_name='Block in teaser?')),
            ],
            options={
                'verbose_name': 'Content block',
                'verbose_name_plural': 'Content blocks',
                'ordering': ('-created_date',),
                'get_latest_by': 'created_date',
            },
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('size', models.IntegerField(blank=True, editable=False, null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('locked', models.BooleanField(default=False, verbose_name='Is locked')),
                ('filetype', models.IntegerField(choices=[(0, 'File'), (1, 'Image')], default=0, verbose_name='Doc type')),
                ('doc', models.FileField(blank=True, max_length=1024, upload_to=nnmware.core.abstract.upload_files_path, verbose_name='File')),
            ],
            options={
                'verbose_name': 'Doc',
                'verbose_name_plural': 'Docs',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='EmailValidation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('password', models.CharField(max_length=30)),
                ('key', models.CharField(db_index=True, max_length=70, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Email Validation',
                'verbose_name_plural': 'Email Validations',
                'ordering': ['username', 'created'],
            },
        ),
        migrations.CreateModel(
            name='FlatNnmcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('parsed_comment', models.TextField(blank=True, verbose_name='parsed content of comment')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Deleted'), (2, 'Locked'), (3, 'Published'), (4, 'Sticky'), (5, 'Moderation'), (6, 'Draft')], default=3, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ('-created_date',),
                'get_latest_by': 'created_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
            ],
            options={
                'verbose_name': 'Follow',
                'verbose_name_plural': 'Follows',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('status', models.BooleanField(db_index=True, default=None, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('subject', models.CharField(blank=True, max_length=120, verbose_name='Subject')),
                ('body', models.TextField(verbose_name='Body')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('replied_at', models.DateTimeField(blank=True, null=True, verbose_name='replied at')),
                ('sender_deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Sender deleted at')),
                ('recipient_deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Recipient deleted at')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Nnmcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('parsed_comment', models.TextField(blank=True, verbose_name='parsed content of comment')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Deleted'), (2, 'Locked'), (3, 'Published'), (4, 'Sticky'), (5, 'Moderation'), (6, 'Draft')], default=3, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Threaded Comment',
                'verbose_name_plural': 'Threaded Comments',
                'ordering': ('-created_date',),
                'get_latest_by': 'created_date',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('notice_type', models.IntegerField(choices=[(0, 'Unknown'), (1, 'System'), (2, 'Video'), (3, 'Tag'), (4, 'Account'), (5, 'Profile')], default=0, verbose_name='Notice Type')),
                ('verb', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Notice',
                'verbose_name_plural': 'Notices',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Pic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('size', models.IntegerField(blank=True, editable=False, null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('locked', models.BooleanField(default=False, verbose_name='Is locked')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to=nnmware.core.abstract.upload_images_path, verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image width')),
                ('source', models.URLField(blank=True, max_length=256, verbose_name='Source')),
            ],
            options={
                'verbose_name': 'Pic',
                'verbose_name_plural': 'Pics',
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=40, unique=True, verbose_name='URL')),
                ('follow', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to=nnmware.core.abstract.upload_images_path, verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image width')),
                ('project_name', models.CharField(blank=True, max_length=50, verbose_name='Project Name')),
                ('project_url', models.URLField(blank=True, max_length=255, verbose_name='Project URL')),
                ('video_url', models.URLField(max_length=255, verbose_name='Video URL')),
                ('video_provider', models.CharField(blank=True, max_length=150, verbose_name='Video Provider')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('login_required', models.BooleanField(default=False, help_text='Enable this if users must login before access with this objects.', verbose_name='Login required')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='Slug')),
                ('duration', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('viewcount', models.PositiveIntegerField(default=0, editable=False)),
                ('liked', models.PositiveIntegerField(default=0, editable=False)),
                ('embedcode', models.TextField(blank=True, verbose_name='Embed code')),
                ('publish', models.BooleanField(default=False, verbose_name='Published')),
                ('comments', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='VisitorHit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Creation date')),
                ('session_key', models.CharField(db_index=True, max_length=40, verbose_name='Session key')),
                ('hostname', models.CharField(db_index=True, max_length=100, verbose_name='Hostname')),
                ('referer', models.TextField(verbose_name='Referer')),
                ('url', models.CharField(db_index=True, max_length=255, verbose_name='URL')),
                ('secure', models.BooleanField(db_index=True, default=False, verbose_name='Is secure')),
            ],
            options={
                'verbose_name': 'Visitor hit',
                'verbose_name_plural': 'Visitors hits',
                'ordering': ['-date'],
            },
        ),
    ]
